<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Solicitudes de Amistad</title>
  <link rel="stylesheet" href="/stylesheets/style.css">
</head>

<body>
  <div class="container">
    <h1>Solicitudes de Amistad de <%= user.name %> @<%= user.username %>
    </h1>

    <!-- Lista de solicitudes de amistad -->
    <div class="friend-requests-list">
      <% if (friendRequests && friendRequests.length> 0) { %>
        <% friendRequests.forEach(request=> { %>
          <div class="friend-request">
            <p>Solicitud de amistad de: <strong>
                <%= request.sender_username %>
              </strong></p>
            <div class="request-actions">
              <!-- Botones para aceptar o rechazar solicitud -->
              <button class="accept-request edit-button" data-id="<%= request.id %>" data-status="aceptada">Aceptar</button>
              <button class="reject-request delete-button" data-id="<%= request.id %>" data-status="rechazada">Rechazar</button>
            </div>
          </div>
          <% }); %>
            <% } else { %>
              <p class="no-requests">No hay solicitudes de amistad pendientes.</p>
              <% } %>
    </div>

    <!-- Formulario para enviar una nueva solicitud de amistad -->
    <h2>Enviar Nueva Solicitud de Amistad</h2>
    <form id="newRequestForm">
      <label for="receiver_id">Selecciona un Usuario:</label>
      <input type="hidden" id="sender_id" name="sender_id" value="<%= user.id %>">
      <select id="receiver_id" name="receiver_id" required>
        <option value="" disabled selected>Seleccione un usuario</option>
        <% users.forEach(u=> { %>
          <option value="<%= u.id %>">
            <%= u.username %>
          </option>
          <% }); %>
      </select>
      <button type="submit">Enviar Solicitud</button>
    </form>

    <!-- Botón para volver atrás -->
    <button onclick="window.history.back();" style="margin-bottom: 20px;">Volver Atrás</button>
  </div>

  <script>
    // Función para manejar la creación de una nueva solicitud
    document.getElementById('newRequestForm').addEventListener('submit', function (event) {
      event.preventDefault();

      const sender_id = document.querySelector('input[name="sender_id"]').value;
      const receiver_id = document.getElementById('receiver_id').value;

      fetch('/friend-request', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ sender_id, receiver_id })
      })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            alert('Solicitud de amistad enviada.');
            window.location.reload(); // Recargar la página
          } else {
            alert(data.error || 'Error al enviar la solicitud.');
          }
        })
        .catch(error => console.error('Error:', error));
    });

    // Función para manejar la aceptación de una solicitud
    document.querySelectorAll('.accept-request').forEach(button => {
      button.addEventListener('click', function () {
        const requestId = this.getAttribute('data-id');
        const status = this.getAttribute('data-status');

        fetch(`/friend-request/${requestId}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status })
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              alert('Solicitud de amistad aceptada.');
              window.location.reload(); // Recargar la página
            } else {
              alert(data.error || 'Error al aceptar la solicitud.');
            }
          })
          .catch(error => console.error('Error:', error));
      });
    });

    // Función para manejar el rechazo de una solicitud
    document.querySelectorAll('.reject-request').forEach(button => {
      button.addEventListener('click', function () {
        const requestId = this.getAttribute('data-id');
        const status = this.getAttribute('data-status');

        fetch(`/friend-request/${requestId}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status })
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              alert('Solicitud de amistad rechazada.');
              window.location.reload(); // Recargar la página
            } else {
              alert(data.error || 'Error al rechazar la solicitud.');
            }
          })
          .catch(error => console.error('Error:', error));
      });
    });
  </script>
</body>

</html>